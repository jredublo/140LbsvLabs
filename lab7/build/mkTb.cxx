/*
 * Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
 * 
 * On Sat Mar 10 14:17:59 PST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkTb.h"


/* String declarations */
static std::string const __str_literal_4("<<<< Response[%d] result: %d, oper:Add", 38u);
static std::string const __str_literal_1("<<<< Response[%d] result: %d, oper:GCD", 38u);
static std::string const __str_literal_6("AddOpers:%d, GCDOpers:%d", 24u);
static std::string const __str_literal_8("FAILED! Expected AddCount:%d GCDCount:%d, Got AddCount:%d GCDCount:%d",
					 69u);
static std::string const __str_literal_5("FAILED! oper:Add Expected:%d Got:%d", 35u);
static std::string const __str_literal_3("FAILED! oper:GCD Expected:%d Got:%d", 35u);
static std::string const __str_literal_7("NumCycles:%d", 12u);
static std::string const __str_literal_2("PASSED", 6u);


/* Constructor */
MOD_mkTb::MOD_mkTb(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cycles(simHdl, "cycles", this, 64u, 0llu, (tUInt8)0u),
    INST_done(simHdl, "done", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_gcd1(simHdl, "gcd1", this, 32u, 8u, (tUInt8)0u),
    INST_gcd2(simHdl, "gcd2", this, 32u, 2u, (tUInt8)0u),
    INST_gcdReqCount(simHdl, "gcdReqCount", this, 16u, 0u, (tUInt8)0u),
    INST_gcdResCount(simHdl, "gcdResCount", this, 16u, 0u, (tUInt8)0u),
    INST_int1(simHdl, "int1", this, 32u, 1u, (tUInt8)0u),
    INST_int2(simHdl, "int2", this, 32u, 10u, (tUInt8)0u),
    INST_intReqCount(simHdl, "intReqCount", this, 16u, 0u, (tUInt8)0u),
    INST_intResCount(simHdl, "intResCount", this, 16u, 0u, (tUInt8)0u),
    INST_reqCount(simHdl, "reqCount", this, 16u, 0u, (tUInt8)0u),
    INST_resCount(simHdl, "resCount", this, 16u, 32u, (tUInt8)0u),
    INST_resultsInt_0(simHdl, "resultsInt_0", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_1(simHdl, "resultsInt_1", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_10(simHdl, "resultsInt_10", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_11(simHdl, "resultsInt_11", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_12(simHdl, "resultsInt_12", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_13(simHdl, "resultsInt_13", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_14(simHdl, "resultsInt_14", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_15(simHdl, "resultsInt_15", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_16(simHdl, "resultsInt_16", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_17(simHdl, "resultsInt_17", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_18(simHdl, "resultsInt_18", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_19(simHdl, "resultsInt_19", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_2(simHdl, "resultsInt_2", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_20(simHdl, "resultsInt_20", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_21(simHdl, "resultsInt_21", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_22(simHdl, "resultsInt_22", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_23(simHdl, "resultsInt_23", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_24(simHdl, "resultsInt_24", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_25(simHdl, "resultsInt_25", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_26(simHdl, "resultsInt_26", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_27(simHdl, "resultsInt_27", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_3(simHdl, "resultsInt_3", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_4(simHdl, "resultsInt_4", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_5(simHdl, "resultsInt_5", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_6(simHdl, "resultsInt_6", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_7(simHdl, "resultsInt_7", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_8(simHdl, "resultsInt_8", this, 32u, 0u, (tUInt8)0u),
    INST_resultsInt_9(simHdl, "resultsInt_9", this, 32u, 0u, (tUInt8)0u),
    INST_top(simHdl, "top", this),
    PORT_RST_N((tUInt8)1u),
    DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86(65u)
{
  symbol_count = 58u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTb::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "CAN_FIRE_RL_r_count_cycles",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_r_count_cycles,
	      1u);
  init_symbol(&symbols[1u], "CAN_FIRE_RL_r_disp_count", SYM_DEF, &DEF_CAN_FIRE_RL_r_disp_count, 1u);
  init_symbol(&symbols[2u], "CAN_FIRE_RL_r_finish", SYM_DEF, &DEF_CAN_FIRE_RL_r_finish, 1u);
  init_symbol(&symbols[3u], "CAN_FIRE_RL_r_recv_res", SYM_DEF, &DEF_CAN_FIRE_RL_r_recv_res, 1u);
  init_symbol(&symbols[4u], "CAN_FIRE_RL_r_send_req", SYM_DEF, &DEF_CAN_FIRE_RL_r_send_req, 1u);
  init_symbol(&symbols[5u], "cycles", SYM_MODULE, &INST_cycles);
  init_symbol(&symbols[6u], "done", SYM_MODULE, &INST_done);
  init_symbol(&symbols[7u], "gcd1", SYM_MODULE, &INST_gcd1);
  init_symbol(&symbols[8u], "gcd2", SYM_MODULE, &INST_gcd2);
  init_symbol(&symbols[9u], "gcdReqCount", SYM_MODULE, &INST_gcdReqCount);
  init_symbol(&symbols[10u], "gcdResCount", SYM_MODULE, &INST_gcdResCount);
  init_symbol(&symbols[11u], "int1", SYM_MODULE, &INST_int1);
  init_symbol(&symbols[12u], "int2", SYM_MODULE, &INST_int2);
  init_symbol(&symbols[13u], "intReqCount", SYM_MODULE, &INST_intReqCount);
  init_symbol(&symbols[14u], "intResCount", SYM_MODULE, &INST_intResCount);
  init_symbol(&symbols[15u], "RL_r_count_cycles", SYM_RULE);
  init_symbol(&symbols[16u], "RL_r_disp_count", SYM_RULE);
  init_symbol(&symbols[17u], "RL_r_finish", SYM_RULE);
  init_symbol(&symbols[18u], "RL_r_recv_res", SYM_RULE);
  init_symbol(&symbols[19u], "RL_r_send_req", SYM_RULE);
  init_symbol(&symbols[20u], "reqCount", SYM_MODULE, &INST_reqCount);
  init_symbol(&symbols[21u], "resCount", SYM_MODULE, &INST_resCount);
  init_symbol(&symbols[22u], "resultsInt_0", SYM_MODULE, &INST_resultsInt_0);
  init_symbol(&symbols[23u], "resultsInt_1", SYM_MODULE, &INST_resultsInt_1);
  init_symbol(&symbols[24u], "resultsInt_10", SYM_MODULE, &INST_resultsInt_10);
  init_symbol(&symbols[25u], "resultsInt_11", SYM_MODULE, &INST_resultsInt_11);
  init_symbol(&symbols[26u], "resultsInt_12", SYM_MODULE, &INST_resultsInt_12);
  init_symbol(&symbols[27u], "resultsInt_13", SYM_MODULE, &INST_resultsInt_13);
  init_symbol(&symbols[28u], "resultsInt_14", SYM_MODULE, &INST_resultsInt_14);
  init_symbol(&symbols[29u], "resultsInt_15", SYM_MODULE, &INST_resultsInt_15);
  init_symbol(&symbols[30u], "resultsInt_16", SYM_MODULE, &INST_resultsInt_16);
  init_symbol(&symbols[31u], "resultsInt_17", SYM_MODULE, &INST_resultsInt_17);
  init_symbol(&symbols[32u], "resultsInt_18", SYM_MODULE, &INST_resultsInt_18);
  init_symbol(&symbols[33u], "resultsInt_19", SYM_MODULE, &INST_resultsInt_19);
  init_symbol(&symbols[34u], "resultsInt_2", SYM_MODULE, &INST_resultsInt_2);
  init_symbol(&symbols[35u], "resultsInt_20", SYM_MODULE, &INST_resultsInt_20);
  init_symbol(&symbols[36u], "resultsInt_21", SYM_MODULE, &INST_resultsInt_21);
  init_symbol(&symbols[37u], "resultsInt_22", SYM_MODULE, &INST_resultsInt_22);
  init_symbol(&symbols[38u], "resultsInt_23", SYM_MODULE, &INST_resultsInt_23);
  init_symbol(&symbols[39u], "resultsInt_24", SYM_MODULE, &INST_resultsInt_24);
  init_symbol(&symbols[40u], "resultsInt_25", SYM_MODULE, &INST_resultsInt_25);
  init_symbol(&symbols[41u], "resultsInt_26", SYM_MODULE, &INST_resultsInt_26);
  init_symbol(&symbols[42u], "resultsInt_27", SYM_MODULE, &INST_resultsInt_27);
  init_symbol(&symbols[43u], "resultsInt_3", SYM_MODULE, &INST_resultsInt_3);
  init_symbol(&symbols[44u], "resultsInt_4", SYM_MODULE, &INST_resultsInt_4);
  init_symbol(&symbols[45u], "resultsInt_5", SYM_MODULE, &INST_resultsInt_5);
  init_symbol(&symbols[46u], "resultsInt_6", SYM_MODULE, &INST_resultsInt_6);
  init_symbol(&symbols[47u], "resultsInt_7", SYM_MODULE, &INST_resultsInt_7);
  init_symbol(&symbols[48u], "resultsInt_8", SYM_MODULE, &INST_resultsInt_8);
  init_symbol(&symbols[49u], "resultsInt_9", SYM_MODULE, &INST_resultsInt_9);
  init_symbol(&symbols[50u], "top", SYM_MODULE, &INST_top);
  init_symbol(&symbols[51u],
	      "WILL_FIRE_RL_r_count_cycles",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_r_count_cycles,
	      1u);
  init_symbol(&symbols[52u],
	      "WILL_FIRE_RL_r_disp_count",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_r_disp_count,
	      1u);
  init_symbol(&symbols[53u], "WILL_FIRE_RL_r_finish", SYM_DEF, &DEF_WILL_FIRE_RL_r_finish, 1u);
  init_symbol(&symbols[54u], "WILL_FIRE_RL_r_recv_res", SYM_DEF, &DEF_WILL_FIRE_RL_r_recv_res, 1u);
  init_symbol(&symbols[55u], "WILL_FIRE_RL_r_send_req", SYM_DEF, &DEF_WILL_FIRE_RL_r_send_req, 1u);
  init_symbol(&symbols[56u], "x__h4455", SYM_DEF, &DEF_x__h4455, 16u);
  init_symbol(&symbols[57u], "x__h5070", SYM_DEF, &DEF_x__h5070, 16u);
}


/* Rule actions */

void MOD_mkTb::RL_r_count_cycles()
{
  tUInt64 DEF_x__h2228;
  DEF__read__h2085 = INST_cycles.METH_read();
  DEF_x__h2228 = DEF__read__h2085 + 1llu;
  INST_cycles.METH_write(DEF_x__h2228);
}

void MOD_mkTb::RL_r_send_req()
{
  tUInt32 DEF_x__h4301;
  tUInt32 DEF_x__h4445;
  tUInt32 DEF_x__h4401;
  tUInt32 DEF_x__h3998;
  tUInt32 DEF_x__h3009;
  tUInt32 DEF_x__h4349;
  tUInt32 DEF_x__h4375;
  tUInt8 DEF_NOT_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1__ETC___d74;
  tUInt8 DEF_intReqCount_5_EQ_0_6_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d17;
  tUInt8 DEF_intReqCount_5_EQ_1_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d20;
  tUInt8 DEF_intReqCount_5_EQ_2_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d22;
  tUInt8 DEF_intReqCount_5_EQ_3_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d24;
  tUInt8 DEF_intReqCount_5_EQ_4_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d26;
  tUInt8 DEF_intReqCount_5_EQ_5_7_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d28;
  tUInt8 DEF_intReqCount_5_EQ_6_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d30;
  tUInt8 DEF_intReqCount_5_EQ_7_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d32;
  tUInt8 DEF_intReqCount_5_EQ_8_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d34;
  tUInt8 DEF_intReqCount_5_EQ_9_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d36;
  tUInt8 DEF_intReqCount_5_EQ_10_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d38;
  tUInt8 DEF_intReqCount_5_EQ_11_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d40;
  tUInt8 DEF_intReqCount_5_EQ_12_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d42;
  tUInt8 DEF_intReqCount_5_EQ_13_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d44;
  tUInt8 DEF_intReqCount_5_EQ_14_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d46;
  tUInt8 DEF_intReqCount_5_EQ_15_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d48;
  tUInt8 DEF_intReqCount_5_EQ_16_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d50;
  tUInt8 DEF_intReqCount_5_EQ_17_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d52;
  tUInt8 DEF_intReqCount_5_EQ_18_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d54;
  tUInt8 DEF_intReqCount_5_EQ_19_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d56;
  tUInt8 DEF_intReqCount_5_EQ_20_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d58;
  tUInt8 DEF_intReqCount_5_EQ_21_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d60;
  tUInt8 DEF_intReqCount_5_EQ_22_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d62;
  tUInt8 DEF_intReqCount_5_EQ_23_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d64;
  tUInt8 DEF_intReqCount_5_EQ_24_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d66;
  tUInt8 DEF_intReqCount_5_EQ_25_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d68;
  tUInt8 DEF_intReqCount_5_EQ_26_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d70;
  tUInt8 DEF_intReqCount_5_EQ_27_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d72;
  tUInt32 DEF_x__h4474;
  tUInt32 DEF_x__h4478;
  tUInt8 DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  tUInt8 DEF_SEL_ARR_0_0_1_1_1_1_0_0_0_0_0_0_0_0_0_1_0_0_1__ETC___d85;
  tUInt32 DEF_x__h3050;
  tUInt32 DEF_x__h4326;
  tUInt32 DEF_x__h4411;
  tUInt32 DEF_x__h4285;
  tUInt32 DEF_y__h4286;
  tUInt32 DEF_y_avValue_op1__h4420;
  tUInt32 DEF_y_avValue_op2__h4421;
  DEF_y_avValue_op2__h4421 = INST_gcd2.METH_read();
  DEF_y_avValue_op1__h4420 = INST_gcd1.METH_read();
  DEF_y__h4286 = INST_int2.METH_read();
  DEF_x__h4285 = INST_int1.METH_read();
  DEF_x__h4326 = INST_intReqCount.METH_read();
  DEF_x__h4411 = INST_gcdReqCount.METH_read();
  DEF_x__h4455 = INST_reqCount.METH_read();
  DEF_x__h3050 = (tUInt32)(((tUInt64)(DEF_x__h4285)) * ((tUInt64)(DEF_y__h4286)));
  switch (DEF_x__h4455) {
  case 2u:
  case 3u:
  case 4u:
  case 5u:
  case 15u:
  case 18u:
    DEF_SEL_ARR_0_0_1_1_1_1_0_0_0_0_0_0_0_0_0_1_0_0_1__ETC___d85 = (tUInt8)1u;
    break;
  default:
    DEF_SEL_ARR_0_0_1_1_1_1_0_0_0_0_0_0_0_0_0_1_0_0_1__ETC___d85 = (tUInt8)0u;
  }
  switch (DEF_x__h4455) {
  case 0u:
  case 1u:
  case 6u:
  case 7u:
  case 8u:
  case 9u:
  case 10u:
  case 11u:
  case 12u:
  case 13u:
  case 14u:
  case 16u:
  case 17u:
  case 19u:
  case 20u:
  case 21u:
  case 22u:
  case 23u:
  case 24u:
  case 25u:
  case 26u:
  case 27u:
  case 28u:
  case 29u:
  case 30u:
  case 31u:
    DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9 = (tUInt8)1u;
    break;
  default:
    DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9 = (tUInt8)0u;
  }
  DEF_x__h4478 = DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9 ? DEF_y__h4286 : DEF_y_avValue_op2__h4421;
  DEF_x__h4474 = DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9 ? DEF_x__h4285 : DEF_y_avValue_op1__h4420;
  DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86.set_bits_in_word((tUInt8)(DEF_x__h4474 >> 31u),
										2u,
										0u,
										1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h4474)) << 1u) | (tUInt32)((tUInt8)(DEF_x__h4478 >> 31u)),
												   1u).set_whole_word((((tUInt32)(2147483647u & DEF_x__h4478)) << 1u) | (tUInt32)(DEF_SEL_ARR_0_0_1_1_1_1_0_0_0_0_0_0_0_0_0_1_0_0_1__ETC___d85),
														      0u);
  DEF_intReqCount_5_EQ_27_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d72 = DEF_x__h4326 == 27u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_26_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d70 = DEF_x__h4326 == 26u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_24_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d66 = DEF_x__h4326 == 24u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_25_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d68 = DEF_x__h4326 == 25u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_23_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d64 = DEF_x__h4326 == 23u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_22_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d62 = DEF_x__h4326 == 22u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_21_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d60 = DEF_x__h4326 == 21u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_20_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d58 = DEF_x__h4326 == 20u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_19_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d56 = DEF_x__h4326 == 19u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_18_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d54 = DEF_x__h4326 == 18u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_17_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d52 = DEF_x__h4326 == 17u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_16_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d50 = DEF_x__h4326 == 16u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_15_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d48 = DEF_x__h4326 == 15u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_13_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d44 = DEF_x__h4326 == 13u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_14_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d46 = DEF_x__h4326 == 14u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_12_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d42 = DEF_x__h4326 == 12u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_11_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d40 = DEF_x__h4326 == 11u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_10_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d38 = DEF_x__h4326 == 10u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_9_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d36 = DEF_x__h4326 == 9u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_8_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d34 = DEF_x__h4326 == 8u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_7_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d32 = DEF_x__h4326 == 7u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_5_7_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d28 = DEF_x__h4326 == 5u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_6_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d30 = DEF_x__h4326 == 6u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_4_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d26 = DEF_x__h4326 == 4u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_3_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d24 = DEF_x__h4326 == 3u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_2_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d22 = DEF_x__h4326 == 2u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_1_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d20 = DEF_x__h4326 == 1u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_intReqCount_5_EQ_0_6_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d17 = DEF_x__h4326 == 0u && DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_NOT_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1__ETC___d74 = !DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9;
  DEF_x__h4375 = DEF_y_avValue_op2__h4421 + 3u;
  DEF_x__h4349 = DEF_y_avValue_op1__h4420 + 10u;
  DEF_x__h3998 = DEF_x__h4285 + DEF_y__h4286;
  DEF_x__h3009 = DEF_x__h4285 + 2u;
  DEF_x__h4401 = 65535u & (DEF_x__h4411 + 1u);
  DEF_x__h4301 = 65535u & (DEF_x__h4326 + 1u);
  DEF_x__h4445 = 65535u & (DEF_x__h4455 + 1u);
  if (DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9)
    INST_int1.METH_write(DEF_x__h3009);
  if (DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9)
    INST_int2.METH_write(DEF_x__h3050);
  if (DEF_intReqCount_5_EQ_0_6_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d17)
    INST_resultsInt_0.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_1_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d20)
    INST_resultsInt_1.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_2_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d22)
    INST_resultsInt_2.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_3_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d24)
    INST_resultsInt_3.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_5_7_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d28)
    INST_resultsInt_5.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_4_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d26)
    INST_resultsInt_4.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_6_9_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d30)
    INST_resultsInt_6.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_7_1_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d32)
    INST_resultsInt_7.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_8_3_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d34)
    INST_resultsInt_8.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_9_5_AND_SEL_ARR_1_1_0_0_0_0_1_ETC___d36)
    INST_resultsInt_9.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_10_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d38)
    INST_resultsInt_10.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_11_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d40)
    INST_resultsInt_11.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_12_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d42)
    INST_resultsInt_12.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_13_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d44)
    INST_resultsInt_13.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_14_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d46)
    INST_resultsInt_14.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_15_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d48)
    INST_resultsInt_15.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_16_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d50)
    INST_resultsInt_16.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_18_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d54)
    INST_resultsInt_18.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_17_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d52)
    INST_resultsInt_17.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_19_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d56)
    INST_resultsInt_19.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_20_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d58)
    INST_resultsInt_20.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_21_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d60)
    INST_resultsInt_21.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_22_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d62)
    INST_resultsInt_22.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_23_3_AND_SEL_ARR_1_1_0_0_0_0__ETC___d64)
    INST_resultsInt_23.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_24_5_AND_SEL_ARR_1_1_0_0_0_0__ETC___d66)
    INST_resultsInt_24.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_26_9_AND_SEL_ARR_1_1_0_0_0_0__ETC___d70)
    INST_resultsInt_26.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_25_7_AND_SEL_ARR_1_1_0_0_0_0__ETC___d68)
    INST_resultsInt_25.METH_write(DEF_x__h3998);
  if (DEF_intReqCount_5_EQ_27_1_AND_SEL_ARR_1_1_0_0_0_0__ETC___d72)
    INST_resultsInt_27.METH_write(DEF_x__h3998);
  if (DEF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_0__ETC___d9)
    INST_intReqCount.METH_write(DEF_x__h4301);
  if (DEF_NOT_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1__ETC___d74)
    INST_gcd1.METH_write(DEF_x__h4349);
  if (DEF_NOT_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1__ETC___d74)
    INST_gcd2.METH_write(DEF_x__h4375);
  if (DEF_NOT_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1__ETC___d74)
    INST_gcdReqCount.METH_write(DEF_x__h4401);
  INST_reqCount.METH_write(DEF_x__h4445);
  INST_top.METH_request(DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86);
}

void MOD_mkTb::RL_r_recv_res()
{
  tUInt32 DEF_x__h5058;
  tUInt32 DEF_x__h4828;
  tUInt32 DEF_x__h4554;
  tUInt32 DEF_c__h4571;
  tUInt8 DEF_top_response_0_BIT_0_1_AND_SEL_ARR_2_1_4_1_2_1_ETC___d98;
  tUInt8 DEF_top_response_0_BIT_0_1_AND_NOT_SEL_ARR_2_1_4_1_ETC___d100;
  tUInt8 DEF_NOT_top_response_0_BIT_0_1_02_AND_SEL_ARR_resu_ETC___d135;
  tUInt8 DEF_NOT_top_response_0_BIT_0_1___d102;
  tUInt8 DEF_NOT_top_response_0_BIT_0_1_02_AND_NOT_SEL_ARR__ETC___d137;
  tUInt8 DEF_SEL_ARR_2_1_4_1_2_1_4_gcdResCount_5_6_EQ_top_r_ETC___d97;
  tUInt8 DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d134;
  tUInt32 DEF_x__h4845;
  tUInt32 DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133;
  tUInt8 DEF_top_response_0_BIT_0___d91;
  tUInt32 DEF_top_response_0_BITS_32_TO_1___d93;
  tUInt32 DEF_x__h4832;
  tUInt32 DEF_x__h5062;
  tUInt32 DEF__read__h839;
  tUInt32 DEF__read__h870;
  tUInt32 DEF__read__h901;
  tUInt32 DEF__read__h932;
  tUInt32 DEF__read__h963;
  tUInt32 DEF__read__h994;
  tUInt32 DEF__read__h1025;
  tUInt32 DEF__read__h1056;
  tUInt32 DEF__read__h1087;
  tUInt32 DEF__read__h1118;
  tUInt32 DEF__read__h1149;
  tUInt32 DEF__read__h1180;
  tUInt32 DEF__read__h1211;
  tUInt32 DEF__read__h1242;
  tUInt32 DEF__read__h1273;
  tUInt32 DEF__read__h1304;
  tUInt32 DEF__read__h1335;
  tUInt32 DEF__read__h1366;
  tUInt32 DEF__read__h1397;
  tUInt32 DEF__read__h1428;
  tUInt32 DEF__read__h1459;
  tUInt32 DEF__read__h1490;
  tUInt32 DEF__read__h1521;
  tUInt32 DEF__read__h1552;
  tUInt32 DEF__read__h1583;
  tUInt32 DEF__read__h1614;
  tUInt32 DEF__read__h1645;
  tUInt32 DEF__read__h1676;
  tUInt64 DEF_top_response___d90;
  tUInt64 DEF_AVMeth_top_response;
  DEF__read__h1676 = INST_resultsInt_27.METH_read();
  DEF__read__h1645 = INST_resultsInt_26.METH_read();
  DEF__read__h1614 = INST_resultsInt_25.METH_read();
  DEF__read__h1583 = INST_resultsInt_24.METH_read();
  DEF__read__h1521 = INST_resultsInt_22.METH_read();
  DEF__read__h1552 = INST_resultsInt_23.METH_read();
  DEF__read__h1490 = INST_resultsInt_21.METH_read();
  DEF__read__h1459 = INST_resultsInt_20.METH_read();
  DEF__read__h1428 = INST_resultsInt_19.METH_read();
  DEF__read__h1397 = INST_resultsInt_18.METH_read();
  DEF__read__h1366 = INST_resultsInt_17.METH_read();
  DEF__read__h1335 = INST_resultsInt_16.METH_read();
  DEF__read__h1273 = INST_resultsInt_14.METH_read();
  DEF__read__h1304 = INST_resultsInt_15.METH_read();
  DEF__read__h1242 = INST_resultsInt_13.METH_read();
  DEF__read__h1180 = INST_resultsInt_11.METH_read();
  DEF__read__h1211 = INST_resultsInt_12.METH_read();
  DEF__read__h1149 = INST_resultsInt_10.METH_read();
  DEF__read__h1118 = INST_resultsInt_9.METH_read();
  DEF__read__h1056 = INST_resultsInt_7.METH_read();
  DEF__read__h1087 = INST_resultsInt_8.METH_read();
  DEF__read__h1025 = INST_resultsInt_6.METH_read();
  DEF__read__h963 = INST_resultsInt_4.METH_read();
  DEF__read__h994 = INST_resultsInt_5.METH_read();
  DEF__read__h932 = INST_resultsInt_3.METH_read();
  DEF__read__h901 = INST_resultsInt_2.METH_read();
  DEF__read__h839 = INST_resultsInt_0.METH_read();
  DEF__read__h870 = INST_resultsInt_1.METH_read();
  DEF_x__h5070 = INST_resCount.METH_read();
  DEF_x__h5062 = INST_gcdResCount.METH_read();
  DEF_x__h4832 = INST_intResCount.METH_read();
  switch (DEF_x__h4832) {
  case 0u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h839;
    break;
  case 1u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h870;
    break;
  case 2u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h901;
    break;
  case 3u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h932;
    break;
  case 4u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h963;
    break;
  case 5u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h994;
    break;
  case 6u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1025;
    break;
  case 7u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1056;
    break;
  case 8u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1087;
    break;
  case 9u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1118;
    break;
  case 10u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1149;
    break;
  case 11u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1180;
    break;
  case 12u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1211;
    break;
  case 13u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1242;
    break;
  case 14u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1273;
    break;
  case 15u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1304;
    break;
  case 16u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1335;
    break;
  case 17u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1366;
    break;
  case 18u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1397;
    break;
  case 19u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1428;
    break;
  case 20u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1459;
    break;
  case 21u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1490;
    break;
  case 22u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1521;
    break;
  case 23u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1552;
    break;
  case 24u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1583;
    break;
  case 25u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1614;
    break;
  case 26u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1645;
    break;
  case 27u:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = DEF__read__h1676;
    break;
  default:
    DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 = 2863311530u;
  }
  switch (DEF_x__h5062) {
  case 0u:
  case 4u:
    DEF_x__h4845 = 2u;
    break;
  case 1u:
  case 3u:
  case 5u:
    DEF_x__h4845 = 1u;
    break;
  case 2u:
    DEF_x__h4845 = 4u;
    break;
  default:
    DEF_x__h4845 = 2863311530u;
  }
  DEF_c__h4571 = 65535u & (32u - DEF_x__h5070);
  DEF_x__h4554 = 65535u & (DEF_x__h5070 - 1u);
  DEF_x__h4828 = 65535u & (DEF_x__h4832 + 1u);
  DEF_x__h5058 = 65535u & (DEF_x__h5062 + 1u);
  DEF_AVMeth_top_response = INST_top.METH_response();
  DEF_top_response___d90 = DEF_AVMeth_top_response;
  DEF_top_response_0_BITS_32_TO_1___d93 = (tUInt32)(DEF_top_response___d90 >> 1u);
  DEF_top_response_0_BIT_0___d91 = (tUInt8)((tUInt8)1u & DEF_top_response___d90);
  DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d134 = DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133 == DEF_top_response_0_BITS_32_TO_1___d93;
  DEF_SEL_ARR_2_1_4_1_2_1_4_gcdResCount_5_6_EQ_top_r_ETC___d97 = DEF_x__h4845 == DEF_top_response_0_BITS_32_TO_1___d93;
  DEF_NOT_top_response_0_BIT_0_1___d102 = !DEF_top_response_0_BIT_0___d91;
  DEF_NOT_top_response_0_BIT_0_1_02_AND_NOT_SEL_ARR__ETC___d137 = DEF_NOT_top_response_0_BIT_0_1___d102 && !DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d134;
  DEF_NOT_top_response_0_BIT_0_1_02_AND_SEL_ARR_resu_ETC___d135 = DEF_NOT_top_response_0_BIT_0_1___d102 && DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d134;
  DEF_top_response_0_BIT_0_1_AND_NOT_SEL_ARR_2_1_4_1_ETC___d100 = DEF_top_response_0_BIT_0___d91 && !DEF_SEL_ARR_2_1_4_1_2_1_4_gcdResCount_5_6_EQ_top_r_ETC___d97;
  DEF_top_response_0_BIT_0_1_AND_SEL_ARR_2_1_4_1_2_1_ETC___d98 = DEF_top_response_0_BIT_0___d91 && DEF_SEL_ARR_2_1_4_1_2_1_4_gcdResCount_5_6_EQ_top_r_ETC___d97;
  INST_resCount.METH_write(DEF_x__h4554);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_top_response_0_BIT_0___d91)
      dollar_display(sim_hdl,
		     this,
		     "s,16,32",
		     &__str_literal_1,
		     DEF_c__h4571,
		     DEF_top_response_0_BITS_32_TO_1___d93);
    if (DEF_top_response_0_BIT_0_1_AND_SEL_ARR_2_1_4_1_2_1_ETC___d98)
      dollar_display(sim_hdl, this, "s", &__str_literal_2);
    if (DEF_top_response_0_BIT_0_1_AND_NOT_SEL_ARR_2_1_4_1_ETC___d100)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_3,
		     DEF_x__h4845,
		     DEF_top_response_0_BITS_32_TO_1___d93);
  }
  if (DEF_top_response_0_BIT_0___d91)
    INST_gcdResCount.METH_write(DEF_x__h5058);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_top_response_0_BIT_0_1___d102)
      dollar_display(sim_hdl,
		     this,
		     "s,16,32",
		     &__str_literal_4,
		     DEF_c__h4571,
		     DEF_top_response_0_BITS_32_TO_1___d93);
    if (DEF_NOT_top_response_0_BIT_0_1_02_AND_SEL_ARR_resu_ETC___d135)
      dollar_display(sim_hdl, this, "s", &__str_literal_2);
    if (DEF_NOT_top_response_0_BIT_0_1_02_AND_NOT_SEL_ARR__ETC___d137)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_5,
		     DEF_SEL_ARR_resultsInt_0_03_resultsInt_1_04_result_ETC___d133,
		     DEF_top_response_0_BITS_32_TO_1___d93);
  }
  if (DEF_NOT_top_response_0_BIT_0_1___d102)
    INST_intResCount.METH_write(DEF_x__h4828);
}

void MOD_mkTb::RL_r_disp_count()
{
  tUInt8 DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26_42_AN_ETC___d145;
  tUInt8 DEF_NOT_top_getCounts__40_BITS_31_TO_16_41_EQ_26_4_ETC___d148;
  tUInt8 DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26___d142;
  tUInt8 DEF_top_getCounts__40_BITS_15_TO_0_43_EQ_6___d144;
  tUInt32 DEF_x_getCounts_gcdCount__h5094;
  tUInt32 DEF_x_getCounts_intCount__h5093;
  tUInt32 DEF_top_getCounts____d140;
  tUInt32 DEF_signed_6___d150;
  tUInt32 DEF_signed_26___d149;
  DEF_signed_26___d149 = 26u;
  DEF_signed_6___d150 = 6u;
  DEF__read__h2085 = INST_cycles.METH_read();
  DEF_top_getCounts____d140 = INST_top.METH_getCounts();
  DEF_x_getCounts_intCount__h5093 = (tUInt32)(DEF_top_getCounts____d140 >> 16u);
  DEF_x_getCounts_gcdCount__h5094 = (tUInt32)(65535u & DEF_top_getCounts____d140);
  DEF_top_getCounts__40_BITS_15_TO_0_43_EQ_6___d144 = DEF_x_getCounts_gcdCount__h5094 == 6u;
  DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26___d142 = DEF_x_getCounts_intCount__h5093 == 26u;
  DEF_NOT_top_getCounts__40_BITS_31_TO_16_41_EQ_26_4_ETC___d148 = !DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26___d142 || !DEF_top_getCounts__40_BITS_15_TO_0_43_EQ_6___d144;
  DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26_42_AN_ETC___d145 = DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26___d142 && DEF_top_getCounts__40_BITS_15_TO_0_43_EQ_6___d144;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26_42_AN_ETC___d145)
      dollar_display(sim_hdl,
		     this,
		     "s,16,16",
		     &__str_literal_6,
		     DEF_x_getCounts_intCount__h5093,
		     DEF_x_getCounts_gcdCount__h5094);
    if (DEF_top_getCounts__40_BITS_31_TO_16_41_EQ_26_42_AN_ETC___d145)
      dollar_display(sim_hdl, this, "s,64", &__str_literal_7, DEF__read__h2085);
    if (DEF_NOT_top_getCounts__40_BITS_31_TO_16_41_EQ_26_4_ETC___d148)
      dollar_display(sim_hdl,
		     this,
		     "s,-32,-32,16,16",
		     &__str_literal_8,
		     DEF_signed_26___d149,
		     DEF_signed_6___d150,
		     DEF_x_getCounts_intCount__h5093,
		     DEF_x_getCounts_gcdCount__h5094);
  }
  INST_done.METH_write((tUInt8)1u);
}

void MOD_mkTb::RL_r_finish()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_finish(sim_hdl, "32", 0u);
}


/* Methods */


/* Reset routines */

void MOD_mkTb::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_top.reset_RST_N(ARG_rst_in);
  INST_resultsInt_9.reset_RST(ARG_rst_in);
  INST_resultsInt_8.reset_RST(ARG_rst_in);
  INST_resultsInt_7.reset_RST(ARG_rst_in);
  INST_resultsInt_6.reset_RST(ARG_rst_in);
  INST_resultsInt_5.reset_RST(ARG_rst_in);
  INST_resultsInt_4.reset_RST(ARG_rst_in);
  INST_resultsInt_3.reset_RST(ARG_rst_in);
  INST_resultsInt_27.reset_RST(ARG_rst_in);
  INST_resultsInt_26.reset_RST(ARG_rst_in);
  INST_resultsInt_25.reset_RST(ARG_rst_in);
  INST_resultsInt_24.reset_RST(ARG_rst_in);
  INST_resultsInt_23.reset_RST(ARG_rst_in);
  INST_resultsInt_22.reset_RST(ARG_rst_in);
  INST_resultsInt_21.reset_RST(ARG_rst_in);
  INST_resultsInt_20.reset_RST(ARG_rst_in);
  INST_resultsInt_2.reset_RST(ARG_rst_in);
  INST_resultsInt_19.reset_RST(ARG_rst_in);
  INST_resultsInt_18.reset_RST(ARG_rst_in);
  INST_resultsInt_17.reset_RST(ARG_rst_in);
  INST_resultsInt_16.reset_RST(ARG_rst_in);
  INST_resultsInt_15.reset_RST(ARG_rst_in);
  INST_resultsInt_14.reset_RST(ARG_rst_in);
  INST_resultsInt_13.reset_RST(ARG_rst_in);
  INST_resultsInt_12.reset_RST(ARG_rst_in);
  INST_resultsInt_11.reset_RST(ARG_rst_in);
  INST_resultsInt_10.reset_RST(ARG_rst_in);
  INST_resultsInt_1.reset_RST(ARG_rst_in);
  INST_resultsInt_0.reset_RST(ARG_rst_in);
  INST_resCount.reset_RST(ARG_rst_in);
  INST_reqCount.reset_RST(ARG_rst_in);
  INST_intResCount.reset_RST(ARG_rst_in);
  INST_intReqCount.reset_RST(ARG_rst_in);
  INST_int2.reset_RST(ARG_rst_in);
  INST_int1.reset_RST(ARG_rst_in);
  INST_gcdResCount.reset_RST(ARG_rst_in);
  INST_gcdReqCount.reset_RST(ARG_rst_in);
  INST_gcd2.reset_RST(ARG_rst_in);
  INST_gcd1.reset_RST(ARG_rst_in);
  INST_done.reset_RST(ARG_rst_in);
  INST_cycles.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTb::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTb::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cycles.dump_state(indent + 2u);
  INST_done.dump_state(indent + 2u);
  INST_gcd1.dump_state(indent + 2u);
  INST_gcd2.dump_state(indent + 2u);
  INST_gcdReqCount.dump_state(indent + 2u);
  INST_gcdResCount.dump_state(indent + 2u);
  INST_int1.dump_state(indent + 2u);
  INST_int2.dump_state(indent + 2u);
  INST_intReqCount.dump_state(indent + 2u);
  INST_intResCount.dump_state(indent + 2u);
  INST_reqCount.dump_state(indent + 2u);
  INST_resCount.dump_state(indent + 2u);
  INST_resultsInt_0.dump_state(indent + 2u);
  INST_resultsInt_1.dump_state(indent + 2u);
  INST_resultsInt_10.dump_state(indent + 2u);
  INST_resultsInt_11.dump_state(indent + 2u);
  INST_resultsInt_12.dump_state(indent + 2u);
  INST_resultsInt_13.dump_state(indent + 2u);
  INST_resultsInt_14.dump_state(indent + 2u);
  INST_resultsInt_15.dump_state(indent + 2u);
  INST_resultsInt_16.dump_state(indent + 2u);
  INST_resultsInt_17.dump_state(indent + 2u);
  INST_resultsInt_18.dump_state(indent + 2u);
  INST_resultsInt_19.dump_state(indent + 2u);
  INST_resultsInt_2.dump_state(indent + 2u);
  INST_resultsInt_20.dump_state(indent + 2u);
  INST_resultsInt_21.dump_state(indent + 2u);
  INST_resultsInt_22.dump_state(indent + 2u);
  INST_resultsInt_23.dump_state(indent + 2u);
  INST_resultsInt_24.dump_state(indent + 2u);
  INST_resultsInt_25.dump_state(indent + 2u);
  INST_resultsInt_26.dump_state(indent + 2u);
  INST_resultsInt_27.dump_state(indent + 2u);
  INST_resultsInt_3.dump_state(indent + 2u);
  INST_resultsInt_4.dump_state(indent + 2u);
  INST_resultsInt_5.dump_state(indent + 2u);
  INST_resultsInt_6.dump_state(indent + 2u);
  INST_resultsInt_7.dump_state(indent + 2u);
  INST_resultsInt_8.dump_state(indent + 2u);
  INST_resultsInt_9.dump_state(indent + 2u);
  INST_top.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTb::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 55u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_r_count_cycles", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_r_disp_count", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_r_finish", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_r_recv_res", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_r_send_req", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86", 65u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_r_count_cycles", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_r_disp_count", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_r_finish", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_r_recv_res", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_r_send_req", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h2085", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4455", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5070", 16u);
  num = INST_cycles.dump_VCD_defs(num);
  num = INST_done.dump_VCD_defs(num);
  num = INST_gcd1.dump_VCD_defs(num);
  num = INST_gcd2.dump_VCD_defs(num);
  num = INST_gcdReqCount.dump_VCD_defs(num);
  num = INST_gcdResCount.dump_VCD_defs(num);
  num = INST_int1.dump_VCD_defs(num);
  num = INST_int2.dump_VCD_defs(num);
  num = INST_intReqCount.dump_VCD_defs(num);
  num = INST_intResCount.dump_VCD_defs(num);
  num = INST_reqCount.dump_VCD_defs(num);
  num = INST_resCount.dump_VCD_defs(num);
  num = INST_resultsInt_0.dump_VCD_defs(num);
  num = INST_resultsInt_1.dump_VCD_defs(num);
  num = INST_resultsInt_10.dump_VCD_defs(num);
  num = INST_resultsInt_11.dump_VCD_defs(num);
  num = INST_resultsInt_12.dump_VCD_defs(num);
  num = INST_resultsInt_13.dump_VCD_defs(num);
  num = INST_resultsInt_14.dump_VCD_defs(num);
  num = INST_resultsInt_15.dump_VCD_defs(num);
  num = INST_resultsInt_16.dump_VCD_defs(num);
  num = INST_resultsInt_17.dump_VCD_defs(num);
  num = INST_resultsInt_18.dump_VCD_defs(num);
  num = INST_resultsInt_19.dump_VCD_defs(num);
  num = INST_resultsInt_2.dump_VCD_defs(num);
  num = INST_resultsInt_20.dump_VCD_defs(num);
  num = INST_resultsInt_21.dump_VCD_defs(num);
  num = INST_resultsInt_22.dump_VCD_defs(num);
  num = INST_resultsInt_23.dump_VCD_defs(num);
  num = INST_resultsInt_24.dump_VCD_defs(num);
  num = INST_resultsInt_25.dump_VCD_defs(num);
  num = INST_resultsInt_26.dump_VCD_defs(num);
  num = INST_resultsInt_27.dump_VCD_defs(num);
  num = INST_resultsInt_3.dump_VCD_defs(num);
  num = INST_resultsInt_4.dump_VCD_defs(num);
  num = INST_resultsInt_5.dump_VCD_defs(num);
  num = INST_resultsInt_6.dump_VCD_defs(num);
  num = INST_resultsInt_7.dump_VCD_defs(num);
  num = INST_resultsInt_8.dump_VCD_defs(num);
  num = INST_resultsInt_9.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_top.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTb::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTb &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkTb::vcd_defs(tVCDDumpType dt, MOD_mkTb &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 65u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_r_count_cycles) != DEF_CAN_FIRE_RL_r_count_cycles)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_r_count_cycles, 1u);
	backing.DEF_CAN_FIRE_RL_r_count_cycles = DEF_CAN_FIRE_RL_r_count_cycles;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_r_disp_count) != DEF_CAN_FIRE_RL_r_disp_count)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_r_disp_count, 1u);
	backing.DEF_CAN_FIRE_RL_r_disp_count = DEF_CAN_FIRE_RL_r_disp_count;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_r_finish) != DEF_CAN_FIRE_RL_r_finish)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_r_finish, 1u);
	backing.DEF_CAN_FIRE_RL_r_finish = DEF_CAN_FIRE_RL_r_finish;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_r_recv_res) != DEF_CAN_FIRE_RL_r_recv_res)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_r_recv_res, 1u);
	backing.DEF_CAN_FIRE_RL_r_recv_res = DEF_CAN_FIRE_RL_r_recv_res;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_r_send_req) != DEF_CAN_FIRE_RL_r_send_req)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_r_send_req, 1u);
	backing.DEF_CAN_FIRE_RL_r_send_req = DEF_CAN_FIRE_RL_r_send_req;
      }
      ++num;
      if ((backing.DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86) != DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86, 65u);
	backing.DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86 = DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_r_count_cycles) != DEF_WILL_FIRE_RL_r_count_cycles)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_r_count_cycles, 1u);
	backing.DEF_WILL_FIRE_RL_r_count_cycles = DEF_WILL_FIRE_RL_r_count_cycles;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_r_disp_count) != DEF_WILL_FIRE_RL_r_disp_count)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_r_disp_count, 1u);
	backing.DEF_WILL_FIRE_RL_r_disp_count = DEF_WILL_FIRE_RL_r_disp_count;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_r_finish) != DEF_WILL_FIRE_RL_r_finish)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_r_finish, 1u);
	backing.DEF_WILL_FIRE_RL_r_finish = DEF_WILL_FIRE_RL_r_finish;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_r_recv_res) != DEF_WILL_FIRE_RL_r_recv_res)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_r_recv_res, 1u);
	backing.DEF_WILL_FIRE_RL_r_recv_res = DEF_WILL_FIRE_RL_r_recv_res;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_r_send_req) != DEF_WILL_FIRE_RL_r_send_req)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_r_send_req, 1u);
	backing.DEF_WILL_FIRE_RL_r_send_req = DEF_WILL_FIRE_RL_r_send_req;
      }
      ++num;
      if ((backing.DEF__read__h2085) != DEF__read__h2085)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h2085, 64u);
	backing.DEF__read__h2085 = DEF__read__h2085;
      }
      ++num;
      if ((backing.DEF_x__h4455) != DEF_x__h4455)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4455, 16u);
	backing.DEF_x__h4455 = DEF_x__h4455;
      }
      ++num;
      if ((backing.DEF_x__h5070) != DEF_x__h5070)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5070, 16u);
	backing.DEF_x__h5070 = DEF_x__h5070;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_r_count_cycles, 1u);
      backing.DEF_CAN_FIRE_RL_r_count_cycles = DEF_CAN_FIRE_RL_r_count_cycles;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_r_disp_count, 1u);
      backing.DEF_CAN_FIRE_RL_r_disp_count = DEF_CAN_FIRE_RL_r_disp_count;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_r_finish, 1u);
      backing.DEF_CAN_FIRE_RL_r_finish = DEF_CAN_FIRE_RL_r_finish;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_r_recv_res, 1u);
      backing.DEF_CAN_FIRE_RL_r_recv_res = DEF_CAN_FIRE_RL_r_recv_res;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_r_send_req, 1u);
      backing.DEF_CAN_FIRE_RL_r_send_req = DEF_CAN_FIRE_RL_r_send_req;
      vcd_write_val(sim_hdl, num++, DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86, 65u);
      backing.DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86 = DEF_IF_SEL_ARR_1_1_0_0_0_0_1_1_1_1_1_1_1_1_1_0_1_1_ETC___d86;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_r_count_cycles, 1u);
      backing.DEF_WILL_FIRE_RL_r_count_cycles = DEF_WILL_FIRE_RL_r_count_cycles;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_r_disp_count, 1u);
      backing.DEF_WILL_FIRE_RL_r_disp_count = DEF_WILL_FIRE_RL_r_disp_count;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_r_finish, 1u);
      backing.DEF_WILL_FIRE_RL_r_finish = DEF_WILL_FIRE_RL_r_finish;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_r_recv_res, 1u);
      backing.DEF_WILL_FIRE_RL_r_recv_res = DEF_WILL_FIRE_RL_r_recv_res;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_r_send_req, 1u);
      backing.DEF_WILL_FIRE_RL_r_send_req = DEF_WILL_FIRE_RL_r_send_req;
      vcd_write_val(sim_hdl, num++, DEF__read__h2085, 64u);
      backing.DEF__read__h2085 = DEF__read__h2085;
      vcd_write_val(sim_hdl, num++, DEF_x__h4455, 16u);
      backing.DEF_x__h4455 = DEF_x__h4455;
      vcd_write_val(sim_hdl, num++, DEF_x__h5070, 16u);
      backing.DEF_x__h5070 = DEF_x__h5070;
    }
}

void MOD_mkTb::vcd_prims(tVCDDumpType dt, MOD_mkTb &backing)
{
  INST_cycles.dump_VCD(dt, backing.INST_cycles);
  INST_done.dump_VCD(dt, backing.INST_done);
  INST_gcd1.dump_VCD(dt, backing.INST_gcd1);
  INST_gcd2.dump_VCD(dt, backing.INST_gcd2);
  INST_gcdReqCount.dump_VCD(dt, backing.INST_gcdReqCount);
  INST_gcdResCount.dump_VCD(dt, backing.INST_gcdResCount);
  INST_int1.dump_VCD(dt, backing.INST_int1);
  INST_int2.dump_VCD(dt, backing.INST_int2);
  INST_intReqCount.dump_VCD(dt, backing.INST_intReqCount);
  INST_intResCount.dump_VCD(dt, backing.INST_intResCount);
  INST_reqCount.dump_VCD(dt, backing.INST_reqCount);
  INST_resCount.dump_VCD(dt, backing.INST_resCount);
  INST_resultsInt_0.dump_VCD(dt, backing.INST_resultsInt_0);
  INST_resultsInt_1.dump_VCD(dt, backing.INST_resultsInt_1);
  INST_resultsInt_10.dump_VCD(dt, backing.INST_resultsInt_10);
  INST_resultsInt_11.dump_VCD(dt, backing.INST_resultsInt_11);
  INST_resultsInt_12.dump_VCD(dt, backing.INST_resultsInt_12);
  INST_resultsInt_13.dump_VCD(dt, backing.INST_resultsInt_13);
  INST_resultsInt_14.dump_VCD(dt, backing.INST_resultsInt_14);
  INST_resultsInt_15.dump_VCD(dt, backing.INST_resultsInt_15);
  INST_resultsInt_16.dump_VCD(dt, backing.INST_resultsInt_16);
  INST_resultsInt_17.dump_VCD(dt, backing.INST_resultsInt_17);
  INST_resultsInt_18.dump_VCD(dt, backing.INST_resultsInt_18);
  INST_resultsInt_19.dump_VCD(dt, backing.INST_resultsInt_19);
  INST_resultsInt_2.dump_VCD(dt, backing.INST_resultsInt_2);
  INST_resultsInt_20.dump_VCD(dt, backing.INST_resultsInt_20);
  INST_resultsInt_21.dump_VCD(dt, backing.INST_resultsInt_21);
  INST_resultsInt_22.dump_VCD(dt, backing.INST_resultsInt_22);
  INST_resultsInt_23.dump_VCD(dt, backing.INST_resultsInt_23);
  INST_resultsInt_24.dump_VCD(dt, backing.INST_resultsInt_24);
  INST_resultsInt_25.dump_VCD(dt, backing.INST_resultsInt_25);
  INST_resultsInt_26.dump_VCD(dt, backing.INST_resultsInt_26);
  INST_resultsInt_27.dump_VCD(dt, backing.INST_resultsInt_27);
  INST_resultsInt_3.dump_VCD(dt, backing.INST_resultsInt_3);
  INST_resultsInt_4.dump_VCD(dt, backing.INST_resultsInt_4);
  INST_resultsInt_5.dump_VCD(dt, backing.INST_resultsInt_5);
  INST_resultsInt_6.dump_VCD(dt, backing.INST_resultsInt_6);
  INST_resultsInt_7.dump_VCD(dt, backing.INST_resultsInt_7);
  INST_resultsInt_8.dump_VCD(dt, backing.INST_resultsInt_8);
  INST_resultsInt_9.dump_VCD(dt, backing.INST_resultsInt_9);
}

void MOD_mkTb::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkTb &backing)
{
  INST_top.dump_VCD(dt, levels, backing.INST_top);
}
